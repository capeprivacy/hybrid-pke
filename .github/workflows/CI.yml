name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      id: py3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Lint Rust code
      run: |
        cargo fmt --all -- --check
        cargo clippy --all-targets -- -D warnings --no-deps
    - name: Build wheel
      uses: messense/maturin-action@v1
      with:
        target: x86_64
        manylinux: auto
        command: build
        args: --release --sdist -i python${{ matrix.python-version }} -o dist
    - name: Install wheel
      run: |
        pip install hpke_spec --no-index --find-links dist --force-reinstall
        python -c "import hpke_spec"
    - name: Test wheel
      run: |
        pip install pytest
        pytest .
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  windows:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: py3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x86
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Build wheel
      uses: messense/maturin-action@v1
      with:
        command: build
        target: x86
        args: --release -i ${{ steps.py3.outputs.python-path }} -o dist
    - name: Install wheel
      run: |
        pip install hpke_spec --no-index --find-links dist --force-reinstall
        python -c "import hpke_spec"
    - name: Test wheel
      run: |
        pip install pytest
        pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  macos:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: py3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Build wheel - x86_64
      uses: messense/maturin-action@v1
      with:
        command: build
        target: x86_64
        args: --release -i ${{ steps.py3.outputs.python-path }} --out dist --sdist
    - name: Install wheel - x86_64
      run: |
        pip install hpke_spec --no-index --find-links dist --force-reinstall
        python -c "import hpke_spec"
    - name: Test wheel
      run: |
        pip install pytest
        pytest
    - name: Build wheel - universal2
      uses: messense/maturin-action@v1
      with:
        command: build
        args: --release --universal2 -o dist
    - name: Install wheel - universal2
      run: |
        pip install hpke_spec --no-index --find-links dist --force-reinstall
        python -c "import hpke_spec"
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist
  
  update_release_draft:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
    - uses: release-drafter/release-drafter@v5
      with:
        disable-autolabeler: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, update_release_draft ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - run: zip -r wheelhouse.zip wheels
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.update_release_draft.outputs.upload_url }}
          asset_path: wheelhouse.zip
          asset_name: wheelhouse.zip
          asset_content_type: application/zip
      # - name: Publish to PyPI
      #   uses: messense/maturin-action@v1
      #   env:
      #     MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   with:
      #     command: upload
      #     args: --skip-existing *
